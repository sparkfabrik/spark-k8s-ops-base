name: Docker
on:
  push:
    branches:
      - "master"
  pull_request:
    branches:
      - "master"

env:
  IMAGE_NAME: ops-base
  # The following env var can be used to configure the report
  # refs: https://github.com/aquasecurity/trivy-action/issues/142#issuecomment-1203093773
  # SARIF_ARGS: --severity CRITICAL

jobs:
  TestAndScan:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Run Trivy vulnerability scanner in IaC mode
        uses: aquasecurity/trivy-action@master
        env:
          SARIF_ARGS: --severity CRITICAL,HIGH
        with:
          scan-type: "config"
          hide-progress: false
          format: "sarif"
          output: "trivy-results-config.sarif"
          exit-code: "0"
          ignore-unfixed: true
          severity: "CRITICAL,HIGH"

      # Refs https://docs.github.com/en/code-security/code-scanning/integrating-with-code-scanning/uploading-a-sarif-file-to-github
      - name: Upload Trivy config scan results to GitHub Security tab
        uses: github/codeql-action/upload-sarif@v2
        with:
          sarif_file: "trivy-results-config.sarif"
          # Optional. Specify a category to distinguish between multiple analyses
          # for the same tool and ref. If you don't use `category` in your workflow,
          # GitHub will generate a default category name for you
          category: "Configuration"

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Build images
        run: |
          docker buildx build --load . --tag $IMAGE_NAME:latest

      - name: Run Trivy vulnerability scanner in docker mode
        uses: aquasecurity/trivy-action@master
        env:
          SARIF_ARGS: --severity "CRITICAL" --security-checks "vuln,license"
        with:
          scan-type: "image"
          image-ref: "${{ env.IMAGE_NAME }}:latest"
          # Movedo to template format from 'sarif' to fix https://github.com/aquasecurity/trivy-action/issues/95
          format: "template"
          template: "@/contrib/sarif.tpl"
          output: "trivy-results-docker.sarif"
          severity: "CRITICAL"
          timeout: "15m"
          exit-code: "0"
          security-checks: "vuln,license"
          ignore-unfixed: true

      # Refs https://docs.github.com/en/code-security/code-scanning/integrating-with-code-scanning/uploading-a-sarif-file-to-github
      - name: Upload Trivy image scan results to GitHub Security tab
        uses: github/codeql-action/upload-sarif@v2
        with:
          sarif_file: "trivy-results-docker.sarif"
          category: "Image"

  Deploy:
    needs: TestAndScan
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/master'

    steps:
      - uses: actions/checkout@v3

      # Refs https://github.com/docker/login-action#github-container-registry
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Build and push images to GitHub Container Registry
        run: |
          IMAGE_ID=ghcr.io/${{ github.repository_owner }}/$IMAGE_NAME
          # Change all uppercase to lowercase.
          IMAGE_ID=$(echo $IMAGE_ID | tr '[A-Z]' '[a-z]')
          echo IMAGE_ID=$IMAGE_ID
          docker buildx build --push . --platform "linux/amd64,linux/arm64" \
            --tag $IMAGE_ID:latest
