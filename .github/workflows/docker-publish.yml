name: Docker
on:
  push:
    branches:
    - 'master'
  pull_request:
    branches:
    - 'master'

env:
  IMAGE_NAME: ops-base
  # The following env var can be used to configure the report
  # refs: https://github.com/aquasecurity/trivy-action/issues/142#issuecomment-1203093773
  SARIF_ARGS: "--severity CRITICAL"

jobs:
  TestAndScan:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Build images
        run: |
          docker buildx build --load . --tag $IMAGE_NAME:latest

      - name: Run Trivy vulnerability scanner in config mode
        uses: aquasecurity/trivy-action@master
        with:
          scan-type: 'config'
          format: 'sarif'
          output: 'trivy-results-config.sarif'
          severity: 'CRITICAL'
          exit-code: '0'
          ignore-unfixed: true

      # Refs https://docs.github.com/en/code-security/code-scanning/integrating-with-code-scanning/uploading-a-sarif-file-to-github
      - name: Upload Trivy config scan results to GitHub Security tab
        uses: github/codeql-action/upload-sarif@v2
        with:
          sarif_file: 'trivy-results-config.sarif'
          category: Configuration

      - name: Run Trivy vulnerability scanner in docker mode
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: '${{ env.IMAGE_NAME }}:latest'
          format: 'sarif'
          output: 'trivy-results-docker.sarif'
          severity: 'CRITICAL'
          timeout: '15m'
          exit-code: '0'
          ignore-unfixed: true

      # Refs https://docs.github.com/en/code-security/code-scanning/integrating-with-code-scanning/uploading-a-sarif-file-to-github
      - name: Upload Trivy image scan results to GitHub Security tab
        uses: github/codeql-action/upload-sarif@v2
        with:
          sarif_file: 'trivy-results-docker.sarif'
          category: Image

  Deploy:
    needs: TestAndScan
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/master'

    steps:
      - uses: actions/checkout@v2

      - name: Log into GitHub Container Registry
        run: echo "${{ secrets.CR_PAT }}" | docker login https://ghcr.io -u ${{ github.actor }} --password-stdin

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Build and push images to GitHub Container Registry
        run: |
          IMAGE_ID=ghcr.io/${{ github.repository_owner }}/$IMAGE_NAME
          # Change all uppercase to lowercase.
          IMAGE_ID=$(echo $IMAGE_ID | tr '[A-Z]' '[a-z]')
          echo IMAGE_ID=$IMAGE_ID
          docker buildx build --push . --platform "linux/amd64,linux/arm64" \
            --tag $IMAGE_ID:latest \
